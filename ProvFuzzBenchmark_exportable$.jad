// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ProvFuzzBenchmark.scala

package examples.benchmarks.exportable;

import org.apache.spark.SparkConf;
import org.apache.spark.SparkContext;
import org.apache.spark.rdd.RDD;
import scala.Serializable;
import scala.reflect.ClassTag$;
import scala.runtime.*;

public final class ProvFuzzBenchmark_exportable$
{

    public void main(String args[])
    {
        Object obj = new Object();
        SparkConf sparkConf = new SparkConf();
        sparkConf.setMaster("local[6]");
        sparkConf.setAppName("Column Provenance Test").set("spark.executor.memory", "2g");
        String dataset1 = "datasets/studentInfo";
        SparkContext ctx = new SparkContext(sparkConf);
        ctx.setLogLevel("ERROR");
        RDD data1 = ctx.textFile(dataset1, ctx.textFile$default$2());
        data1.map(new Serializable() {

            public final String[] apply(String x$1)
            {
                return x$1.split(",");
            }

            public final volatile Object apply(Object v1)
            {
                return apply((String)v1);
            }

            public static final long serialVersionUID = 0L;

        }, ClassTag$.MODULE$.apply(ScalaRunTime$.MODULE$.arrayClass(java/lang/String))).map(new Serializable(obj) {

            public final String apply(String row[])
            {
                String major = row[1];
                String gender = row[2];
                String year = row[3];
                if(gender.equals("female"))
                    if(major.equals("ComputerScience"))
                    {
                        if(year.equals("Senior"))
                        {
                            String _tmp = "female CS Senior";
                            throw new scala.runtime.NonLocalReturnControl.mcV.sp(nonLocalReturnKey1$1, BoxedUnit.UNIT);
                        } else
                        {
                            String _tmp1 = "female CS !Senior";
                            throw new scala.runtime.NonLocalReturnControl.mcV.sp(nonLocalReturnKey1$1, BoxedUnit.UNIT);
                        }
                    } else
                    {
                        String _tmp2 = "female !CS";
                        throw new scala.runtime.NonLocalReturnControl.mcV.sp(nonLocalReturnKey1$1, BoxedUnit.UNIT);
                    }
                if(major.equals("Economics"))
                {
                    if(year.equals("Senior"))
                    {
                        String _tmp3 = "male Econ Senior";
                        throw new scala.runtime.NonLocalReturnControl.mcV.sp(nonLocalReturnKey1$1, BoxedUnit.UNIT);
                    } else
                    {
                        String _tmp4 = "male Econ !Senior";
                        throw new scala.runtime.NonLocalReturnControl.mcV.sp(nonLocalReturnKey1$1, BoxedUnit.UNIT);
                    }
                } else
                {
                    String _tmp5 = "male !Econ";
                    throw new scala.runtime.NonLocalReturnControl.mcV.sp(nonLocalReturnKey1$1, BoxedUnit.UNIT);
                }
            }

            public final volatile Object apply(Object v1)
            {
                return apply((String[])v1);
            }

            public static final long serialVersionUID = 0L;
            private final Object nonLocalReturnKey1$1;

//            public
            {
                this.nonLocalReturnKey1$1 = nonLocalReturnKey1$1;
                super();
            }
        }, ClassTag$.MODULE$.apply(java/lang/String)).filter(new Serializable() {

            public final boolean apply(String x)
            {
                return !x.equals("");
            }

            public final volatile Object apply(Object v1)
            {
                return BoxesRunTime.boxToBoolean(apply((String)v1));
            }

            public static final long serialVersionUID = 0L;

        });
        break MISSING_BLOCK_LABEL_148;
        NonLocalReturnControl nonlocalreturncontrol;
//        nonlocalreturncontrol;
        if(nonlocalreturncontrol.key() != obj)
            break MISSING_BLOCK_LABEL_149;
        nonlocalreturncontrol.value$mcV$sp();
        return;
        throw nonlocalreturncontrol;
    }

    private ProvFuzzBenchmark_exportable$()
    {
    }

    public static final ProvFuzzBenchmark_exportable$ MODULE$ = this;

    static 
    {
        new ProvFuzzBenchmark_exportable$();
    }
}
